{"ast":null,"code":"var _jsxFileName = \"/home/kirobaghdad/Documents/FWD_React_Final_Project/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport BooksList from \"./BooksList\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { Link, Route, Routes } from \"react-router-dom\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [wantToRead, setWantToRead] = useState([]);\n  const [read, setRead] = useState([]);\n\n  const getBooks = async () => {\n    const res = await BooksAPI.getAll();\n    return res;\n  };\n\n  const categorizeBooks = books => {\n    setCurrentlyReading(books.filter(book => book.shelf === \"currentlyReading\"));\n    setWantToRead(books.filter(book => book.shelf === \"wantToRead\"));\n    setRead(books.filter(book => book.shelf === \"read\"));\n  };\n\n  useEffect(() => {\n    getBooks().then(function (res) {\n      categorizeBooks(res);\n    });\n  }, []);\n\n  const changeCategory = (book, newCategory) => {\n    BooksAPI.update(book, newCategory); //Removing the book from the old category\n\n    if (book.shelf === \"currentlyReading\") {\n      setCurrentlyReading(currentlyReading.filter(b => book.id !== b.id));\n    } else if (book.shelf === \"wantToRead\") {\n      setWantToRead(wantToRead.filter(b => book.id !== b.id));\n    } else if (book.shelf === \"read\") {\n      setRead(read.filter(b => book.id !== b.id));\n    } //Adding the book to the new category\n\n\n    if (newCategory === \"currentlyReading\") {\n      setCurrentlyReading([...currentlyReading, book]);\n    } else if (newCategory === \"wantToRead\") {\n      setWantToRead([...wantToRead, book]);\n    } else if (newCategory === \"read\") {\n      setRead([...read, book]);\n    }\n\n    book.shelf = newCategory;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-books-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"MyReads\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-books-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(BooksList, {\n              title: \"Currently Reading\",\n              books: currentlyReading,\n              changeCategory: changeCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BooksList, {\n              title: \"Want to Read\",\n              books: wantToRead,\n              changeCategory: changeCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BooksList, {\n              title: \"Read\",\n              books: read,\n              changeCategory: changeCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"open-search\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/search\",\n            children: \"Add a Book!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"search\",\n      element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YaNwzx1LyeAlWFDCS2t1OQg2lPo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kirobaghdad/Documents/FWD_React_Final_Project/starter/src/App.js"],"names":["useState","useEffect","BooksList","BooksAPI","Link","Route","Routes","Search","App","currentlyReading","setCurrentlyReading","wantToRead","setWantToRead","read","setRead","getBooks","res","getAll","categorizeBooks","books","filter","book","shelf","then","changeCategory","newCategory","update","b","id"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport BooksList from \"./BooksList\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { Link, Route, Routes } from \"react-router-dom\";\nimport Search from \"./Search\";\n\nfunction App() {\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [wantToRead, setWantToRead] = useState([]);\n  const [read, setRead] = useState([]);\n\n  const getBooks = async () => {\n    const res = await BooksAPI.getAll();\n    return res;\n  };\n\n  const categorizeBooks = (books) => {\n    setCurrentlyReading(\n      books.filter((book) => book.shelf === \"currentlyReading\")\n    );\n    setWantToRead(books.filter((book) => book.shelf === \"wantToRead\"));\n    setRead(books.filter((book) => book.shelf === \"read\"));\n  };\n\n  useEffect(() => {\n    getBooks().then(function (res) {\n      categorizeBooks(res);\n    });\n  }, []);\n\n  const changeCategory = (book, newCategory) => {\n    BooksAPI.update(book, newCategory);\n\n    //Removing the book from the old category\n    if (book.shelf === \"currentlyReading\") {\n      setCurrentlyReading(currentlyReading.filter((b) => book.id !== b.id));\n    } else if (book.shelf === \"wantToRead\") {\n      setWantToRead(wantToRead.filter((b) => book.id !== b.id));\n    } else if (book.shelf === \"read\") {\n      setRead(read.filter((b) => book.id !== b.id));\n    }\n\n    //Adding the book to the new category\n    if (newCategory === \"currentlyReading\") {\n      setCurrentlyReading([...currentlyReading, book]);\n    } else if (newCategory === \"wantToRead\") {\n      setWantToRead([...wantToRead, book]);\n    } else if (newCategory === \"read\") {\n      setRead([...read, book]);\n    }\n    book.shelf = newCategory;\n  };\n\n  return (\n    <Routes>\n      <Route\n        exact\n        path=\"/\"\n        element={\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <BooksList\n                  title=\"Currently Reading\"\n                  books={currentlyReading}\n                  changeCategory={changeCategory}\n                />\n                <BooksList\n                  title=\"Want to Read\"\n                  books={wantToRead}\n                  changeCategory={changeCategory}\n                />\n                <BooksList\n                  title=\"Read\"\n                  books={read}\n                  changeCategory={changeCategory}\n                />\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <Link to=\"/search\">Add a Book!</Link>\n            </div>\n          </div>\n        }\n      />\n      <Route path=\"search\" element={<Search />} />\n    </Routes>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}